{
  // Place your personal-blog workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
  // Placeholders with the same ids are connected.

  "customReactArrowFunctionalComponent": {
    "prefix": "rafc",
    "description": "Creates a React Arrow Functional Component",
    "scope": "typescript, typescriptreact",
    "body": [
      "import cn from 'classnames'",
      "",
      "import { type ${TM_FILENAME_BASE}FC } from './${TM_FILENAME_BASE}.types'",
      "",
      "import cls from './${TM_FILENAME_BASE}.module.scss'",
      "",
      "export const ${TM_FILENAME_BASE}: ${TM_FILENAME_BASE}FC = (props) => {",
      "  return (",
      "    <div className={cn(cls.wrapper)}>",
      "      $1",
      "    </div>",
      "  )",
      "}",
      ""
    ]
  },
  "customPropsForReactFunctionalComponent": {
    "prefix": "rfcp",
    "description": "Props for React Functional Component",
    "scope": "typescript, typescriptreact",
    "body": [
      "import { type FC } from 'react'",
      "",
      "interface ${1:Component}Props {",
      "  $2",
      "}",
      "",
      "export type ${1:Component}FC = FC<${1:Component}Props>",
      ""
    ]
  },
  "customTestingTemplate": {
    "prefix": "ctest",
    "description": "Template for testing",
    "scope": "typescript, typescriptreact",
    "body": [
      "describe('${TM_FILENAME_BASE}', () => {",
      "  it('should $1', () => {",
      "    expect().toEqual()",
      "  })",
      "})",
      ""
    ]
  }
}
